"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[23259],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=c(n),y=s,f=d["".concat(p,".").concat(y)]||d[y]||l[y]||o;return n?r.createElement(f,a(a({ref:t},u),{},{components:n})):r.createElement(f,a({ref:t},u))}));function y(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,a=new Array(o);a[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:s,a[1]=i;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},21167:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>o,contentTitle:()=>a,metadata:()=>i,toc:()=>p,default:()=>u});var r=n(87462),s=(n(67294),n(3905));const o={title:"Typing REST Endpoints",id:"rest-types",original_id:"rest-types"},a=void 0,i={unversionedId:"guides/rest-types",id:"version-4.5/guides/rest-types",isDocsHomePage:!1,title:"Typing REST Endpoints",description:"In REST design, many operations can be performed on a given type of data.",source:"@site/versioned_docs/version-4.5/guides/rest-types.md",sourceDirName:"guides",slug:"/guides/rest-types",permalink:"/docs/4.5/guides/rest-types",editUrl:"https://github.com/coinbase/rest-hooks/edit/master/docs/guides/rest-types.md",tags:[],version:"4.5",lastUpdatedBy:"Nathaniel Tucker",lastUpdatedAt:1630038660,formattedLastUpdatedAt:"8/26/2021",frontMatter:{title:"Typing REST Endpoints",id:"rest-types",original_id:"rest-types"},sidebar:"version-4.5/docs",previous:{title:"Custom endpoints",permalink:"/docs/4.5/guides/endpoints"},next:{title:"Pagination",permalink:"/docs/4.5/guides/pagination"}},p=[{value:"TL;DR",id:"tldr",children:[]}],c={toc:p};function u({components:e,...t}){return(0,s.kt)("wrapper",(0,r.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"In REST design, many operations can be performed on a given type of data."),(0,s.kt)("p",null,"Attaching these operations to the type via static methods allows"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"A singular import for both class usage, typing, and endpoints"),(0,s.kt)("li",{parentName:"ul"},"Reducing code duplication by extracting common patterns into base classes")),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"../api/Resource"},"Resource")," provides one such pattern, which makes getting started\nfast. However, even if the pattern generally matches your API design, there\nare often special operations or one-off cases where additional endpoints must\nbe extended or added."),(0,s.kt)("h2",{id:"tldr"},"TL;DR"),(0,s.kt)("p",null,"Here's an example of each endpoint's return typed followed by usage. For\na full explanation, continue reading below."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Resource, ReadShape, MutateShape, AbstractInstanceType } from 'rest-hooks';\n\nclass MyResource extends Resource {\n  static list<T extends typeof Resource>(\n    this: T,\n  ): ReadShape<AbstractInstanceType<T>[]> {\n    return super.list();\n  }\n\n  static create<T extends typeof Resource>(\n    this: T,\n  ): MutateShape<AbstractInstanceType<T>> {\n    return super.create();\n  }\n\n  static filteredAndPaginatedList<T extends typeof Resource>(\n    this: T,\n  ): MutateShape<\n    { results: AbstractInstanceType<T>[]; nextPage: string }\n  > {\n    return super.list();\n  }\n}\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"import MyResource from 'resources/MyResource';\nimport { useResource } from 'rest-hooks';\n\nconst items = useResource(MyResource.list(), {});\nconst createMy = useFetcher(MyResource.create());\nconst { results, nextPage } = useResource(\n  MyResource.filteredAndPaginatedList(),\n  { filterA: true, sortby: 'first' },\n);\n")))}u.isMDXComponent=!0}}]);