"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[26653],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>m});var n=t(67294);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,n,s=function(e,r){if(null==e)return{};var t,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(s[t]=e[t]);return s}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var c=n.createContext({}),u=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=u(e.components);return n.createElement(c.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,s=e.mdxType,o=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),p=u(t),m=s,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return t?n.createElement(f,i(i({ref:r},l),{},{components:t})):n.createElement(f,i({ref:r},l))}));function m(e,r){var t=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var o=t.length,i=new Array(o);i[0]=p;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a.mdxType="string"==typeof e?e:s,i[1]=a;for(var u=2;u<o;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},82031:(e,r,t)=>{t.r(r),t.d(r,{frontMatter:()=>o,contentTitle:()=>i,metadata:()=>a,toc:()=>c,default:()=>l});var n=t(87462),s=(t(67294),t(3905));const o={title:"Resources with nested structure",sidebar_label:"Nesting related resources (server-side join)"},i=void 0,a={unversionedId:"guides/nested-response",id:"version-5.0/guides/nested-response",isDocsHomePage:!1,title:"Resources with nested structure",description:"Say you have a foreignkey author, and an array of foreign keys to contributors.",source:"@site/versioned_docs/version-5.0/guides/nested-response.md",sourceDirName:"guides",slug:"/guides/nested-response",permalink:"/docs/guides/nested-response",editUrl:"https://github.com/coinbase/rest-hooks/edit/main/website-2/docs/guides/nested-response.md",tags:[],version:"5.0",lastUpdatedBy:"Nathaniel Tucker",lastUpdatedAt:1630038660,formattedLastUpdatedAt:"8/26/2021",frontMatter:{title:"Resources with nested structure",sidebar_label:"Nesting related resources (server-side join)"},sidebar:"version-5.0/docs",previous:{title:"Multi-column primary key",permalink:"/docs/guides/multi-pk"},next:{title:"Capturing Mutation Side-Effects",permalink:"/docs/guides/rpc"}},c=[{value:"static schema",id:"static-schema",children:[]},{value:"Circular dependencies",id:"circular-dependencies",children:[]}],u={toc:c};function l({components:e,...r}){return(0,s.kt)("wrapper",(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Say you have a foreignkey author, and an array of foreign keys to contributors."),(0,s.kt)("p",null,"First we need to model what this will look like by adding members to our ",(0,s.kt)("a",{parentName:"p",href:"/docs/api/resource"},"Resource")," definition.\nThese should be the primary keys of the entities we care about."),(0,s.kt)("p",null,"Next we'll provide a definition of nested members in the ",(0,s.kt)("a",{parentName:"p",href:"../api/Entity#static-schema--k-keyof-this-schema-"},"schema")," member."),(0,s.kt)("h2",{id:"static-schema"},"static schema"),(0,s.kt)("h4",{id:"resourcesarticleresourcets"},(0,s.kt)("inlineCode",{parentName:"h4"},"resources/ArticleResource.ts")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Resource, AbstractInstanceType } from '@rest-hooks/rest';\nimport { UserResource } from 'resources';\n\nexport default class ArticleResource extends Resource {\n  readonly id: number | undefined = undefined;\n  readonly content: string = '';\n  readonly author: UserResource = UserResource.fromJS({});\n  readonly contributors: number[] = [];\n\n  pk() {\n    return this.id?.toString();\n  }\n  static urlRoot = 'http://test.com/article/';\n\n  static schema = {\n    author: UserResource,\n    contributors: [UserResource],\n  };\n}\n")),(0,s.kt)("h4",{id:"articlelisttsx"},(0,s.kt)("inlineCode",{parentName:"h4"},"ArticleList.tsx")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useResource } from 'rest-hooks';\nimport ArticleResource from 'resources/ArticleResource';\n\nexport default function ArticleList({ id }: { id: number }) {\n  const articles = useResource(ArticleResource.list(), { id });\n\n  return (\n    <React.Fragment>\n      {articles.map(article => (\n        <>\n          <ArticleInline key={article.pk()} article={article} />\n          <UserPreview user={article.user} />\n        </>\n      ))}\n    </React.Fragment>\n  );\n}\n\nfunction UserPreview({ user }: { user: UserResource }) {\n  return <span>{user.username} {user.email}</span>\n}\n")),(0,s.kt)("h2",{id:"circular-dependencies"},"Circular dependencies"),(0,s.kt)("p",null,"If both ",(0,s.kt)("a",{parentName:"p",href:"/docs/api/resource"},"Resources")," are in distinct files, this must be handled with care."),(0,s.kt)("p",null,"If two or more ",(0,s.kt)("a",{parentName:"p",href:"/docs/api/resource"},"Resources")," include each other in their schema, you can dynamically override\none of their ",(0,s.kt)("a",{parentName:"p",href:"../api/Entity#static-schema--k-keyof-this-schema-"},"schema")," to avoid circular imports."),(0,s.kt)("h4",{id:"resourcesarticleresourcets-1"},(0,s.kt)("inlineCode",{parentName:"h4"},"resources/ArticleResource.ts")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Resource, AbstractInstanceType } from '@rest-hooks/rest';\nimport { UserResource } from 'resources';\n\nexport default class ArticleResource extends Resource {\n  readonly id: number | undefined = undefined;\n  readonly content: string = '';\n  readonly author: UserResource = UserResource.fromJS({});\n  readonly contributors: number[] = [];\n\n  pk() {\n    return this.id?.toString();\n  }\n  static urlRoot = 'http://test.com/article/';\n\n  static schema = {\n    author: UserResource,\n    contributors: [UserResource],\n  };\n}\n\n// we set the schema here since we can correctly reference ArticleResource\nUserResource.schema = {\n  posts: [ArticleResource],\n};\n")),(0,s.kt)("h4",{id:"resourcesuserresourcets"},(0,s.kt)("inlineCode",{parentName:"h4"},"resources/UserResource.ts")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Resource } from '@rest-hooks/rest';\nimport type { ArticleResource } from 'resources';\n// we can only import the type else we break javascript imports\n// thus we change the schema of UserResource above\n\nexport default class UserResource extends Resource {\n  readonly id: number | undefined = undefined;\n  readonly name: string = '';\n  readonly posts: ArticleResource[] = [];\n\n  pk() {\n    return this.id?.toString();\n  }\n  static urlRoot = 'http://test.com/user/';\n}\n")))}l.isMDXComponent=!0}}]);